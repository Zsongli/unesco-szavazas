generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RevokedToken {
  id    Int    @id @default(autoincrement())
  value String @unique
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  name     String
  password String

  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now()) @updatedAt
  placement      Placement[]
  orderFinalized OrderFinalized[]
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  permissions String[]
  users       User[]
}

model Class {
  id        Int         @id @default(autoincrement())
  name      String
  country   String
  placement Placement[]
}

model OrderCategory {
  id             Int              @id @default(autoincrement())
  name           String
  placement      Placement[]
  orderFinalized OrderFinalized[]
}

model OrderFinalized {
  userId     String
  user       User          @relation(fields: [userId], references: [id])
  categoryId Int
  category   OrderCategory @relation(fields: [categoryId], references: [id])

  @@id([userId, categoryId])
}

model Placement {
  userId     String
  user       User          @relation(fields: [userId], references: [id])
  categoryId Int
  category   OrderCategory @relation(fields: [categoryId], references: [id])
  classId    Int
  class      Class         @relation(fields: [classId], references: [id])
  placement  Int

  @@id([userId, categoryId, classId])
}
